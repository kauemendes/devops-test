name: CI/CD Pipeline

on:
  push:
    branches:
      - main

jobs:
  provision-infrastructure:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Install AWS CDK
        run: | 
          npm install -g aws-cdk

      - name: Install dependencies
        run: |
          cd $RUNNER_WORKSPACE/devops-test/infra
          npm ci

      - name: cdk bootstrap
        uses: tj-actions/aws-cdk@v4
        with:
          working_dir: infra
          cdk_subcommand: "bootstrap"
          cdk_stack: "aws://543289521753/us-west-2"
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_DEFAULT_REGION: "us-west-2"

      - name: cdk diff
        uses: tj-actions/aws-cdk@v4
        with:
          working_dir: infra
          cdk_subcommand: "diff"
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_DEFAULT_REGION: "us-west-2"

      - name: cdk synth
        uses: tj-actions/aws-cdk@v4
        with:
          working_dir: infra
          cdk_subcommand: "synth"
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_DEFAULT_REGION: "us-west-2"

      - name: cdk deploy
        uses: tj-actions/aws-cdk@v4
        with:
          working_dir: infra
          cdk_subcommand: "deploy"
          cdk_extra_args: >-
            --progress events
            --require-approval never
            --parameters environment=${{ secrets.ENVIRONMENT }}
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_DEFAULT_REGION: "us-west-2"

  build-and-push-image:
    needs: provision-infrastructure
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Set up AWS CLI
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2

      - name: Build, tag, and push docker image to Amazon ECR
        env:
          REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          REPOSITORY: devopsteststack-devopstestrepo17fe3f0b-1ppqec17ooxm
          IMAGE_TAG: latest
        run: |
          echo $REGISTRY
          echo $REPOSITORY
          printenv
          docker build -f docker/pr/Dockerfile -t $REGISTRY/$REPOSITORY:$IMAGE_TAG .
          docker push $REGISTRY/$REPOSITORY:$IMAGE_TAG
